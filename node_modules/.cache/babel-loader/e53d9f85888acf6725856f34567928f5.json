{"ast":null,"code":"var _jsxFileName = \"/Users/tiffany/culture-scheduler/CultureClient/culture-client/src/components/SignupForm.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport 'date-fns';\nimport { Button, Checkbox, Form, Radio } from 'semantic-ui-react';\nimport { MuiPickersUtilsProvider, KeyboardDatePicker } from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst preferences = ['유쾌한', '어두운', '감동적인', '스릴있는', '힐링', '설레는', '잔잔한', '역동적인', '유익한', '사진 찍기 좋은', '장르물', '온택트'];\nconst gender = ['남성', '여성'];\n\nclass SignupForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handle_change = e => {\n      const name = e.target.name;\n      const value = e.target.value;\n      this.setState(prevstate => {\n        const newState = { ...prevstate\n        };\n        newState[name] = value;\n        return newState;\n      });\n    };\n\n    this.handle_checkbox = item => {\n      let preference_one = this.state.preference_one;\n\n      if (preference_one === '') {\n        let name = 'preference_one';\n        this.setState(prevstate => {\n          const newState = { ...prevstate\n          };\n          newState[name] = item;\n          return newState;\n        });\n      } else {\n        let name = 'preference_two';\n        this.setState(prevstate => {\n          const newState = { ...prevstate\n          };\n          newState[name] = item;\n          return newState;\n        });\n      }\n    };\n\n    this.handle_checkbox2 = item => {\n      this.setState(prevstate => {\n        const newState = { ...prevstate\n        };\n        newState['gender'] = item;\n        return newState;\n      });\n    };\n\n    this.handle_date = date => {\n      this.setState({\n        birth: date\n      });\n    };\n\n    this.renderPreferences = () => {\n      let checkbox = preferences.map(item => /*#__PURE__*/_jsxDEV(Checkbox, {\n        label: item,\n        onChange: this.handle_checkbox.bind(this, item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 4\n      }, this));\n      return checkbox;\n    };\n\n    this.renderGender = () => {\n      let checkbox = gender.map(item => /*#__PURE__*/_jsxDEV(Checkbox, {\n        label: item,\n        onChange: this.handle_checkbox2.bind(this, item)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, this));\n      return checkbox;\n    };\n\n    this.renderDatePicker = () => {\n      return /*#__PURE__*/_jsxDEV(MuiPickersUtilsProvider, {\n        utils: DateFnsUtils,\n        children: /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n          disableToolbar: true,\n          variant: \"inline\",\n          format: \"yyyy-MM-dd\",\n          margin: \"normal\",\n          id: \"date-picker-inline\",\n          label: \"\\uC0DD\\uB144\\uC6D4\\uC77C\",\n          value: this.state.birth,\n          onChange: this.handle_date,\n          KeyboardButtonProps: {\n            'aria-label': 'change date'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 4\n      }, this);\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      first_name: '',\n      last_name: '',\n      email: '',\n      contact: '',\n      birth: new Date(),\n      gender: '',\n      preference_one: '',\n      preference_two: ''\n    };\n  }\n\n  render() {\n    const state = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: e => this.props.handle_signup(e, state),\n        children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"username\",\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"username\",\n            value: this.state.username,\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            value: this.state.password,\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            value: this.state.email,\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"first_name\",\n            children: \"First Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"first_name\",\n            value: this.state.first_name,\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"last_name\",\n            children: \"Last Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"last_name\",\n            value: this.state.last_name,\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"contact\",\n            children: \"Contact\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"contact\",\n            value: this.state.contact,\n            placeholder: \"\\uD578\\uB4DC\\uD3F0\\uBC88\\uD638 11\\uC790\\uB9AC\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694.\",\n            onChange: this.handle_change\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: \"\\uCDE8\\uD5A5\\uC744 \\uC120\\uD0DD\\uD558\\uC138\\uC694:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 6\n        }, this), this.renderPreferences(), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: \"\\uC131\\uBCC4:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 6\n        }, this), this.renderGender(), /*#__PURE__*/_jsxDEV(Form.Field, {\n          children: \"\\uC0DD\\uB144\\uC6D4\\uC77C:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 6\n        }, this), this.renderDatePicker(), /*#__PURE__*/_jsxDEV(Form.Button, {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uC644\\uB8CC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default SignupForm;\nSignupForm.propTypes = {\n  handle_signup: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/Users/tiffany/culture-scheduler/CultureClient/culture-client/src/components/SignupForm.js"],"names":["React","Component","PropTypes","Button","Checkbox","Form","Radio","MuiPickersUtilsProvider","KeyboardDatePicker","DateFnsUtils","preferences","gender","SignupForm","constructor","props","handle_change","e","name","target","value","setState","prevstate","newState","handle_checkbox","item","preference_one","state","handle_checkbox2","handle_date","date","birth","renderPreferences","checkbox","map","bind","renderGender","renderDatePicker","username","password","first_name","last_name","email","contact","Date","preference_two","render","handle_signup","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport 'date-fns'\nimport { Button, Checkbox, Form, Radio } from 'semantic-ui-react';\nimport {\n\tMuiPickersUtilsProvider,\n\tKeyboardDatePicker,\n} from '@material-ui/pickers';\nimport DateFnsUtils from '@date-io/date-fns';\n\nconst preferences = [\n\t'유쾌한',\n\t'어두운',\n\t'감동적인',\n\t'스릴있는',\n\t'힐링',\n\t'설레는',\n\t'잔잔한',\n\t'역동적인',\n\t'유익한',\n\t'사진 찍기 좋은',\n\t'장르물',\n\t'온택트',\n]\n\nconst gender = [\n\t'남성',\n\t'여성',\n]\n\nclass SignupForm extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tusername: '',\n\t\t\tpassword: '',\n\t\t\tfirst_name: '',\n\t\t\tlast_name: '',\n\t\t\temail: '',\n\t\t\tcontact: '',\n\t\t\tbirth: new Date(),\n\t\t\tgender: '',\n\t\t\tpreference_one: '',\n\t\t\tpreference_two: '',\n\t\t};\n\t}\n\n\n\thandle_change = e => {\n\t\tconst name = e.target.name;\n\t\tconst value = e.target.value;\n\t\tthis.setState(prevstate => {\n\t\t\tconst newState = { ...prevstate };\n\t\t\tnewState[name] = value;\n\t\t\treturn newState;\n\t\t});\n\t};\n\n\thandle_checkbox = item => {\n\t\tlet preference_one = this.state.preference_one;\n\t\tif(preference_one === '') {\n\t\t\tlet name = 'preference_one';\n\t\t\tthis.setState(prevstate => {\n\t\t\t\tconst newState = { ...prevstate };\n\t\t\t\tnewState[name] = item;\n\t\t\t\treturn newState;\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tlet name = 'preference_two';\n\t\t\tthis.setState(prevstate => {\n\t\t\t\tconst newState = { ...prevstate };\n\t\t\t\tnewState[name] = item;\n\t\t\t\treturn newState;\n\t\t\t});\n\t\t}\n\t};\n\n\thandle_checkbox2 = item => {\n\t\tthis.setState(prevstate => {\n\t\t\tconst newState = {...prevstate};\n\t\t\tnewState['gender'] = item;\n\t\t\treturn newState;\n\t\t});\n\t}\n\n\thandle_date = (date) => {\n\t\tthis.setState({\n\t\t\tbirth: date\n\t\t})\n\t}\n\n\trenderPreferences = () => {\n\t\tlet checkbox = preferences.map((item) => \n\t\t\t<Checkbox \n\t\t\t\tlabel={item}\n\t\t\t\tonChange={this.handle_checkbox.bind(this, item)}\n\t\t\t/>\n\t\t)\n\t\treturn checkbox\n\t}\n\n\trenderGender = () => {\n\t\tlet checkbox = gender.map((item) =>\n\t\t\t<Checkbox\n\t\t\t\tlabel={item}\n\t\t\t\tonChange={this.handle_checkbox2.bind(this, item)}\n\t\t\t/>\n\t\t)\n\t\treturn checkbox\n\t}\n\n\trenderDatePicker = () => {\n\t\treturn (\n\t\t\t<MuiPickersUtilsProvider utils={DateFnsUtils}>\n\t\t\t\t<KeyboardDatePicker\n\t\t\t\t\tdisableToolbar\n\t\t\t\t\tvariant=\"inline\"\n\t\t\t\t\tformat=\"yyyy-MM-dd\"\n\t\t\t\t\tmargin=\"normal\"\n\t\t\t\t\tid=\"date-picker-inline\"\n\t\t\t\t\tlabel=\"생년월일\"\n\t\t\t\t\tvalue={this.state.birth}\n\t\t\t\t\tonChange={this.handle_date}\n\t\t\t\t\tKeyboardButtonProps={{\n\t\t\t\t\t\t'aria-label': 'change date',\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</MuiPickersUtilsProvider>\n\t\t)\n\t}\n\n\trender() {\n\t\tconst state = this.state;\n\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form onSubmit={e => this.props.handle_signup(e, state)}>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"username\">Username</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"username\"\n\t\t\t\t\t\t\tvalue={this.state.username}\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"password\">Password</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={this.state.password}\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"email\">Email</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tvalue={this.state.email}\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"first_name\">First Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"first_name\"\n\t\t\t\t\t\t\tvalue={this.state.first_name}\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"last_name\">Last Name</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"last_name\"\n\t\t\t\t\t\t\tvalue={this.state.last_name}\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t<label htmlFor=\"contact\">Contact</label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"contact\"\n\t\t\t\t\t\t\tvalue={this.state.contact}\n\t\t\t\t\t\t\tplaceholder=\"핸드폰번호 11자리를 입력하세요.\"\n\t\t\t\t\t\t\tonChange={this.handle_change}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t취향을 선택하세요:\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t{ this.renderPreferences() }\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t성별:\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t{this.renderGender()}\n\t\t\t\t\t<Form.Field>\n\t\t\t\t\t\t생년월일:\n\t\t\t\t\t</Form.Field>\n\t\t\t\t\t{ this.renderDatePicker() }\n\t\t\t\t\t<Form.Button>회원가입 완료</Form.Button>\n\t\t\t\t</Form>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default SignupForm;\n\nSignupForm.propTypes = {\n\thandle_signup: PropTypes.func.isRequired\n};"]},"metadata":{},"sourceType":"module"}